window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "basis", "modulename": "basis", "kind": "module", "doc": "<p>Classes for basic concepts (size, coordinates, axis, tetragon, line) that are used as parameters for panoramic systems and cameras.</p>\n"}, {"fullname": "basis.Coordinates", "modulename": "basis", "qualname": "Coordinates", "kind": "class", "doc": "<p>Class for panoramic system and camera body center coordinates.</p>\n"}, {"fullname": "basis.Coordinates.__init__", "modulename": "basis", "qualname": "Coordinates.__init__", "kind": "function", "doc": "<p>Class constructor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x coordinate, defaults to 0.0</li>\n<li><strong>y</strong>:  y coordinate, defaults to 0.0</li>\n<li><strong>z</strong>:  z coordinate, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span>)</span>"}, {"fullname": "basis.Coordinates.getCoordinates", "modulename": "basis", "qualname": "Coordinates.getCoordinates", "kind": "function", "doc": "<p>Get x, y, z coordinates.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>x, y, z coordinates.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Coordinates.getCoordinatesX", "modulename": "basis", "qualname": "Coordinates.getCoordinatesX", "kind": "function", "doc": "<p>Get x coordinate.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>x coordinate</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Coordinates.getCoordinatesY", "modulename": "basis", "qualname": "Coordinates.getCoordinatesY", "kind": "function", "doc": "<p>Get y coordinate.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>y coordinate</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Coordinates.getCoordinatesZ", "modulename": "basis", "qualname": "Coordinates.getCoordinatesZ", "kind": "function", "doc": "<p>Get z coordinate.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>z coordinate</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Coordinates.setCoordinates", "modulename": "basis", "qualname": "Coordinates.setCoordinates", "kind": "function", "doc": "<p>Set x, y, z coordinates.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x coordinate, defaults to 0.0</li>\n<li><strong>y</strong>:  y coordinate, defaults to 0.0</li>\n<li><strong>z</strong>:  z coordinate, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Coordinates.setCoordinatesX", "modulename": "basis", "qualname": "Coordinates.setCoordinatesX", "kind": "function", "doc": "<p>Set x coordinate.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x coordinate, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Coordinates.setCoordinatesY", "modulename": "basis", "qualname": "Coordinates.setCoordinatesY", "kind": "function", "doc": "<p>Set y coordinate.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y</strong>:  y coordinate, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Coordinates.setCoordinatesZ", "modulename": "basis", "qualname": "Coordinates.setCoordinatesZ", "kind": "function", "doc": "<p>Set z coordinate.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>z</strong>:  z coordinate, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Line", "modulename": "basis", "qualname": "Line", "kind": "class", "doc": "<p>Class for lines given by a parametric equation.</p>\n"}, {"fullname": "basis.Line.__init__", "modulename": "basis", "qualname": "Line.__init__", "kind": "function", "doc": "<p>Class constructor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>point_1</strong>:  first point of line</li>\n<li><strong>point_2</strong>:  second point of line</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">point_1</span>, </span><span class=\"param\"><span class=\"n\">point_2</span></span>)</span>"}, {"fullname": "basis.Line.getLine", "modulename": "basis", "qualname": "Line.getLine", "kind": "function", "doc": "<p>Get guide vector and point of line.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>guide vector and point of line</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Line.getVector", "modulename": "basis", "qualname": "Line.getVector", "kind": "function", "doc": "<p>Get guide vector of line.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>guide vector of line</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Line.getPoint", "modulename": "basis", "qualname": "Line.getPoint", "kind": "function", "doc": "<p>Get point of line.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>point of line</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Tetragon", "modulename": "basis", "qualname": "Tetragon", "kind": "class", "doc": "<p>Class for cameras fields of view and sharpness.</p>\n"}, {"fullname": "basis.Tetragon.__init__", "modulename": "basis", "qualname": "Tetragon.__init__", "kind": "function", "doc": "<p>Class constructor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>a_x</strong>:  x coordinate for vertex a of a quadrilateral, defaults to 0.0</li>\n<li><strong>a_y</strong>:  y coordinate for vertex a of a quadrilateral, defaults to 0.0</li>\n<li><strong>a_z</strong>:  z coordinate for vertex a of a quadrilateral, defaults to 0.0</li>\n<li><strong>b_x</strong>:  x coordinate for vertex b of a quadrilateral, defaults to 0.0</li>\n<li><strong>b_y</strong>:  y coordinate for vertex b of a quadrilateral, defaults to 0.0</li>\n<li><strong>b_z</strong>:  z coordinate for vertex b of a quadrilateral, defaults to 0.0</li>\n<li><strong>c_x</strong>:  x coordinate for vertex c of a quadrilateral, defaults to 0.0</li>\n<li><strong>c_y</strong>:  y coordinate for vertex c of a quadrilateral, defaults to 0.0</li>\n<li><strong>c_z</strong>:  z coordinate for vertex c of a quadrilateral, defaults to 0.0</li>\n<li><strong>d_x</strong>:  x coordinate for vertex d of a quadrilateral, defaults to 0.0</li>\n<li><strong>d_y</strong>:  y coordinate for vertex d of a quadrilateral, defaults to 0.0</li>\n<li><strong>d_z</strong>:  z coordinate for vertex d of a quadrilateral, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">a_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">a_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">b_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">b_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">b_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">c_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">c_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">c_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">d_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">d_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">d_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span>)</span>"}, {"fullname": "basis.Tetragon.getLines", "modulename": "basis", "qualname": "Tetragon.getLines", "kind": "function", "doc": "<p>Get ab, bc, cd, da lines.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>ab, bc, cd, da lines.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Tetragon.getVertices", "modulename": "basis", "qualname": "Tetragon.getVertices", "kind": "function", "doc": "<p>Get coordinates of a, b, c, d vertices.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinates of a, b, c, d vertices</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Tetragon.getVertexA", "modulename": "basis", "qualname": "Tetragon.getVertexA", "kind": "function", "doc": "<p>Get coordinates of a vertex a</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinates of a vertex a</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Tetragon.getVertexB", "modulename": "basis", "qualname": "Tetragon.getVertexB", "kind": "function", "doc": "<p>Get coordinates of a vertex b</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinates of a vertex b</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Tetragon.getVertexC", "modulename": "basis", "qualname": "Tetragon.getVertexC", "kind": "function", "doc": "<p>Get coordinates of a vertex c</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinates of a vertex c</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Tetragon.getVertexD", "modulename": "basis", "qualname": "Tetragon.getVertexD", "kind": "function", "doc": "<p>Get coordinates of a vertex d</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinates of a vertex d</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Tetragon.setVertices", "modulename": "basis", "qualname": "Tetragon.setVertices", "kind": "function", "doc": "<p>Set new coordinates of a, b, c, d vertices.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>a_x</strong>:  x coordinate for vertex a of a quadrilateral, defaults to 0.0</li>\n<li><strong>a_y</strong>:  y coordinate for vertex a of a quadrilateral, defaults to 0.0</li>\n<li><strong>a_z</strong>:  z coordinate for vertex a of a quadrilateral, defaults to 0.0</li>\n<li><strong>b_x</strong>:  x coordinate for vertex b of a quadrilateral, defaults to 0.0</li>\n<li><strong>b_y</strong>:  y coordinate for vertex b of a quadrilateral, defaults to 0.0</li>\n<li><strong>b_z</strong>:  z coordinate for vertex b of a quadrilateral, defaults to 0.0</li>\n<li><strong>c_x</strong>:  x coordinate for vertex c of a quadrilateral, defaults to 0.0</li>\n<li><strong>c_y</strong>:  y coordinate for vertex c of a quadrilateral, defaults to 0.0</li>\n<li><strong>c_z</strong>:  z coordinate for vertex c of a quadrilateral, defaults to 0.0</li>\n<li><strong>d_x</strong>:  x coordinate for vertex d of a quadrilateral, defaults to 0.0</li>\n<li><strong>d_y</strong>:  y coordinate for vertex d of a quadrilateral, defaults to 0.0</li>\n<li><strong>d_z</strong>:  z coordinate for vertex d of a quadrilateral, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">a_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">a_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">a_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">b_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">b_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">b_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">c_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">c_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">c_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">d_x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">d_y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">d_z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis", "modulename": "basis", "qualname": "Axis", "kind": "class", "doc": "<p>Class for angles defining panoramic systems and cameras spatial orientation.</p>\n"}, {"fullname": "basis.Axis.__init__", "modulename": "basis", "qualname": "Axis.__init__", "kind": "function", "doc": "<p>Class constructor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pitch</strong>:  pitch angle, defaults to 0.0</li>\n<li><strong>yaw</strong>:  yaw angle, defaults to 0.0</li>\n<li><strong>roll</strong>:  roll angle, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span>)</span>"}, {"fullname": "basis.Axis.getAxis", "modulename": "basis", "qualname": "Axis.getAxis", "kind": "function", "doc": "<p>Get pitch, yaw, roll angles.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>pitch, yaw, roll angles</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis.getPitch", "modulename": "basis", "qualname": "Axis.getPitch", "kind": "function", "doc": "<p>Get pitch angle.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>pitch angle</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis.getYaw", "modulename": "basis", "qualname": "Axis.getYaw", "kind": "function", "doc": "<p>Get yaw angle.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>yaw angle</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis.getRoll", "modulename": "basis", "qualname": "Axis.getRoll", "kind": "function", "doc": "<p>Get roll angle.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>roll angle</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis.setAxis", "modulename": "basis", "qualname": "Axis.setAxis", "kind": "function", "doc": "<p>Set pitch, yaw, roll angles.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pitch</strong>:  pitch angle, defaults to 0.0</li>\n<li><strong>yaw</strong>:  yaw angle, defaults to 0.0</li>\n<li><strong>roll</strong>:  roll angle, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis.setAxisPitch", "modulename": "basis", "qualname": "Axis.setAxisPitch", "kind": "function", "doc": "<p>Set pitch angle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pitch</strong>:  pitch angle, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis.setAxisYaw", "modulename": "basis", "qualname": "Axis.setAxisYaw", "kind": "function", "doc": "<p>Set yaw angle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>yaw</strong>:  yaw angle, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Axis.setAxisRoll", "modulename": "basis", "qualname": "Axis.setAxisRoll", "kind": "function", "doc": "<p>Set roll angle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>roll</strong>:  roll angle, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Size", "modulename": "basis", "qualname": "Size", "kind": "class", "doc": "<p>Class for panoramic systems and cameras body size.</p>\n"}, {"fullname": "basis.Size.__init__", "modulename": "basis", "qualname": "Size.__init__", "kind": "function", "doc": "<p>Class constructor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>length</strong>:  body length, defaults to 0.0</li>\n<li><strong>width</strong>:  body width, defaults to 0.0</li>\n<li><strong>height</strong>:  body height, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span>)</span>"}, {"fullname": "basis.Size.getSize", "modulename": "basis", "qualname": "Size.getSize", "kind": "function", "doc": "<p>Get body length, width, height.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>body length, width, height</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Size.getLength", "modulename": "basis", "qualname": "Size.getLength", "kind": "function", "doc": "<p>Get body length.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>body length</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Size.getWidth", "modulename": "basis", "qualname": "Size.getWidth", "kind": "function", "doc": "<p>Get body width.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>body width</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Size.getHeight", "modulename": "basis", "qualname": "Size.getHeight", "kind": "function", "doc": "<p>Get body height.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>body height</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Size.setSize", "modulename": "basis", "qualname": "Size.setSize", "kind": "function", "doc": "<p>Set body height.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>height</strong>:  body height, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Size.setLength", "modulename": "basis", "qualname": "Size.setLength", "kind": "function", "doc": "<p>Set body length.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>lenght</strong>:  body length, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lenght</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "basis.Size.setWidth", "modulename": "basis", "qualname": "Size.setWidth", "kind": "function", "doc": "<p>Set body width.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>width</strong>:  body width, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera", "modulename": "camera", "kind": "module", "doc": "<p>This module contains the camera class and its methods for storing, retrieving and changing camera parameters, \nas well as the image sensor and lens classes, that are part of the camera class, and their methods.</p>\n"}, {"fullname": "camera.Lens", "modulename": "camera", "qualname": "Lens", "kind": "class", "doc": "<p>_summary_</p>\n"}, {"fullname": "camera.Lens.__init__", "modulename": "camera", "qualname": "Lens.__init__", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>focal_length</strong>:  _description_</li>\n<li><strong>f_number</strong>:  _description_</li>\n<li><strong>focus_distance</strong>:  _description_</li>\n<li><strong>body_diameter</strong>:  _description_</li>\n<li><strong>body_length</strong>:  _description_</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">focal_length</span>, </span><span class=\"param\"><span class=\"n\">f_number</span>, </span><span class=\"param\"><span class=\"n\">focus_distance</span>, </span><span class=\"param\"><span class=\"n\">body_diameter</span>, </span><span class=\"param\"><span class=\"n\">body_length</span></span>)</span>"}, {"fullname": "camera.Lens.getFocalLength", "modulename": "camera", "qualname": "Lens.getFocalLength", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Lens.getFNumber", "modulename": "camera", "qualname": "Lens.getFNumber", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Lens.getFocusDistance", "modulename": "camera", "qualname": "Lens.getFocusDistance", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Lens.getSize", "modulename": "camera", "qualname": "Lens.getSize", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Lens.getDiameter", "modulename": "camera", "qualname": "Lens.getDiameter", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Lens.getLength", "modulename": "camera", "qualname": "Lens.getLength", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.ImageSensor", "modulename": "camera", "qualname": "ImageSensor", "kind": "class", "doc": "<p>_summary_</p>\n"}, {"fullname": "camera.ImageSensor.__init__", "modulename": "camera", "qualname": "ImageSensor.__init__", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>width</strong>:  _description_</li>\n<li><strong>height</strong>:  _description_</li>\n<li><strong>pixel_size</strong>:  _description_</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">pixel_size</span></span>)</span>"}, {"fullname": "camera.ImageSensor.getSize", "modulename": "camera", "qualname": "ImageSensor.getSize", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.ImageSensor.getWidth", "modulename": "camera", "qualname": "ImageSensor.getWidth", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.ImageSensor.getHeight", "modulename": "camera", "qualname": "ImageSensor.getHeight", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.ImageSensor.getPixelSize", "modulename": "camera", "qualname": "ImageSensor.getPixelSize", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera", "modulename": "camera", "qualname": "Camera", "kind": "class", "doc": "<p>_summary_</p>\n"}, {"fullname": "camera.Camera.__init__", "modulename": "camera", "qualname": "Camera.__init__", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  _description_</li>\n<li><strong>focal_length</strong>:  _description_</li>\n<li><strong>f_number</strong>:  _description_</li>\n<li><strong>focus_distance</strong>:  _description_</li>\n<li><strong>diameter_of_lens</strong>:  _description_</li>\n<li><strong>lenght_of_lens</strong>:  _description_</li>\n<li><strong>width_of_image_sensor</strong>:  _description_</li>\n<li><strong>height_of_image_sensor</strong>:  _description_</li>\n<li><strong>pixel_size</strong>:  _description_</li>\n<li><strong>body_lenght</strong>:  _description_</li>\n<li><strong>body_width</strong>:  _description_</li>\n<li><strong>body_height</strong>:  _description_</li>\n<li><strong>x</strong>:  _description_, defaults to 0.0</li>\n<li><strong>y</strong>:  _description_, defaults to 0.0</li>\n<li><strong>z</strong>:  _description_, defaults to 0.0</li>\n<li><strong>pitch</strong>:  _description_, defaults to 0.0</li>\n<li><strong>yaw</strong>:  _description_, defaults to 0.0</li>\n<li><strong>roll</strong>:  _description_, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span>,</span><span class=\"param\">\t<span class=\"n\">focal_length</span>,</span><span class=\"param\">\t<span class=\"n\">f_number</span>,</span><span class=\"param\">\t<span class=\"n\">focus_distance</span>,</span><span class=\"param\">\t<span class=\"n\">diameter_of_lens</span>,</span><span class=\"param\">\t<span class=\"n\">lenght_of_lens</span>,</span><span class=\"param\">\t<span class=\"n\">width_of_image_sensor</span>,</span><span class=\"param\">\t<span class=\"n\">height_of_image_sensor</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_size</span>,</span><span class=\"param\">\t<span class=\"n\">body_lenght</span>,</span><span class=\"param\">\t<span class=\"n\">body_width</span>,</span><span class=\"param\">\t<span class=\"n\">body_height</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span>)</span>"}, {"fullname": "camera.Camera.getID", "modulename": "camera", "qualname": "Camera.getID", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getRotationMatrix", "modulename": "camera", "qualname": "Camera.getRotationMatrix", "kind": "function", "doc": "<p>_summary_</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getBasicPyramidOfFOV", "modulename": "camera", "qualname": "Camera.getBasicPyramidOfFOV", "kind": "function", "doc": "<p>_summary_</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getHyperfocalDistance", "modulename": "camera", "qualname": "Camera.getHyperfocalDistance", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getFocusDistance", "modulename": "camera", "qualname": "Camera.getFocusDistance", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getAnglesOfView", "modulename": "camera", "qualname": "Camera.getAnglesOfView", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getWidthAngleOfView", "modulename": "camera", "qualname": "Camera.getWidthAngleOfView", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getHeightAngleOfView", "modulename": "camera", "qualname": "Camera.getHeightAngleOfView", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getSize", "modulename": "camera", "qualname": "Camera.getSize", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getLength", "modulename": "camera", "qualname": "Camera.getLength", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getWidth", "modulename": "camera", "qualname": "Camera.getWidth", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getHeight", "modulename": "camera", "qualname": "Camera.getHeight", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getAxis", "modulename": "camera", "qualname": "Camera.getAxis", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getPitch", "modulename": "camera", "qualname": "Camera.getPitch", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getYaw", "modulename": "camera", "qualname": "Camera.getYaw", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getRoll", "modulename": "camera", "qualname": "Camera.getRoll", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getLensFocalLength", "modulename": "camera", "qualname": "Camera.getLensFocalLength", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getLensSize", "modulename": "camera", "qualname": "Camera.getLensSize", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getLensDiameter", "modulename": "camera", "qualname": "Camera.getLensDiameter", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getLensLength", "modulename": "camera", "qualname": "Camera.getLensLength", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getImageSensorSize", "modulename": "camera", "qualname": "Camera.getImageSensorSize", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getCoordinates", "modulename": "camera", "qualname": "Camera.getCoordinates", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getCoordinatesX", "modulename": "camera", "qualname": "Camera.getCoordinatesX", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getCoordinatesY", "modulename": "camera", "qualname": "Camera.getCoordinatesY", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.getCoordinatesZ", "modulename": "camera", "qualname": "Camera.getCoordinatesZ", "kind": "function", "doc": "<p>_summary_</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>_description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "camera.Camera.printParameters", "modulename": "camera", "qualname": "Camera.printParameters", "kind": "function", "doc": "<p>_summary_</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system", "modulename": "panoramic_system", "kind": "module", "doc": "<p>This module contains classes and their methods for creating panoramic systems, \nobtaining and changing their parameters, as well as for calculating their \nfields of view and sharpness.</p>\n"}, {"fullname": "panoramic_system.toMeters", "modulename": "panoramic_system", "qualname": "toMeters", "kind": "function", "doc": "<p>Conversion function from millimeters to meters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>:  some value in millimeters</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>the same value in meters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.ListOfPanoramicSystems", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems", "kind": "class", "doc": "<p>The class contains a list of all panoramic systems \nthat we use to review the field of interest to us, \nas well as the parameters of all these panoramic systems.</p>\n"}, {"fullname": "panoramic_system.ListOfPanoramicSystems.__init__", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems.__init__", "kind": "function", "doc": "<p>Class ListOfPanoramicSystems constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "panoramic_system.ListOfPanoramicSystems.clear", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems.clear", "kind": "function", "doc": "<p>Remove all panoramic systems from this list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.ListOfPanoramicSystems.getNumberOfPanoramicSystems", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems.getNumberOfPanoramicSystems", "kind": "function", "doc": "<p>Get number of panoramic systems in list of panoramic systems.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>number of panoramic systems in list of panoramic systems</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.ListOfPanoramicSystems.addPanoramicSystem", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems.addPanoramicSystem", "kind": "function", "doc": "<p>Add panoramic system to the end of list of panoramic stystems.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>panoramic_system</strong>:  new panoramic system that we want to add to the end of the list of panoramic systems</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">panoramic_system</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.ListOfPanoramicSystems.removePanoramicSystem", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems.removePanoramicSystem", "kind": "function", "doc": "<p>Remove a panoramic system from the list of panoramic systems by its id.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>panoramic_system_id</strong>:  id number of the panoramic system we want to remove</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">panoramic_system_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.ListOfPanoramicSystems.getListOfPanoramicSystems", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems.getListOfPanoramicSystems", "kind": "function", "doc": "<p>Get a list of panoramic systems.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of panoramic systems</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.ListOfPanoramicSystems.printParameters", "modulename": "panoramic_system", "qualname": "ListOfPanoramicSystems.printParameters", "kind": "function", "doc": "<p>Print the parameters of all panoramic systems from the list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem", "modulename": "panoramic_system", "qualname": "PanoramicSystem", "kind": "class", "doc": "<p>A panoramic system class that allows you to store all the parameters of a panoramic system, \nreceive and change these parameters, as well as calculate the view and sharpness fields of panoramic systems.</p>\n"}, {"fullname": "panoramic_system.PanoramicSystem.__init__", "modulename": "panoramic_system", "qualname": "PanoramicSystem.__init__", "kind": "function", "doc": "<p>A constructor for the panoramic camera class that, \nbased on the incoming parameters, builds a panoramic system \nwith the specified parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  id number of panoramic system in list of panoramic systems</li>\n<li><strong>body_lenght</strong>:  length of panoramic systems body, defaults to 0.0</li>\n<li><strong>body_width</strong>:  width of panoramic systems body, defaults to 0.0</li>\n<li><strong>body_height</strong>:  height of panoramic systems body, defaults to 0.0</li>\n<li><strong>x</strong>:  coordinate x of the center of the panoramic system body in space, defaults to 0.0</li>\n<li><strong>y</strong>:  coordinate y of the center of the panoramic system body in space, defaults to 0.0</li>\n<li><strong>z</strong>:  coordinate z of the center of the panoramic system body in space, defaults to 0.0</li>\n<li><strong>pitch</strong>:  panoramic system pitch angle, defaults to 0.0</li>\n<li><strong>yaw</strong>:  panoramic system yaw angle, defaults to 0.0</li>\n<li><strong>roll</strong>:  panoramic system roll angle, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span>,</span><span class=\"param\">\t<span class=\"n\">body_lenght</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">body_width</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">body_height</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span>)</span>"}, {"fullname": "panoramic_system.PanoramicSystem.changeProperties", "modulename": "panoramic_system", "qualname": "PanoramicSystem.changeProperties", "kind": "function", "doc": "<p>Changing the parameters of an existing system based on incoming parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  id number of panoramic system in list of panoramic systems</li>\n<li><strong>body_lenght</strong>:  length of panoramic systems body, defaults to 0.0</li>\n<li><strong>body_width</strong>:  width of panoramic systems body, defaults to 0.0</li>\n<li><strong>body_height</strong>:  height of panoramic systems body, defaults to 0.0</li>\n<li><strong>x</strong>:  coordinate x of the center of the panoramic system body in space, defaults to 0.0</li>\n<li><strong>y</strong>:  coordinate y of the center of the panoramic system body in space, defaults to 0.0</li>\n<li><strong>z</strong>:  coordinate z of the center of the panoramic system body in space, defaults to 0.0</li>\n<li><strong>pitch</strong>:  panoramic system pitch angle, defaults to 0.0</li>\n<li><strong>yaw</strong>:  panoramic system yaw angle, defaults to 0.0</li>\n<li><strong>roll</strong>:  panoramic system roll angle, defaults to 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span>,</span><span class=\"param\">\t<span class=\"n\">lenght</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.changePropertiesFromData", "modulename": "panoramic_system", "qualname": "PanoramicSystem.changePropertiesFromData", "kind": "function", "doc": "<p>Changing the parameters of an existing system based on data received in the JSON-format.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  data in the JSON-format</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getID", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getID", "kind": "function", "doc": "<p>Get id number of the panoramic system in the list of panoramic systems.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>id number of the panoramic system in the list of panoramic systems</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getRotationMatrix", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getRotationMatrix", "kind": "function", "doc": "<p>Get a rotation matrix of the panoramic system \ncalculated according to the angles defining the orientation \nof the panoramic system in space.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>rotation matrix of the panoramic system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getNumberOfCameras", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getNumberOfCameras", "kind": "function", "doc": "<p>Get the number of cameras that form the panoramic system.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>number of cameras</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.addCamera", "modulename": "panoramic_system", "qualname": "PanoramicSystem.addCamera", "kind": "function", "doc": "<p>Add a new camera to the end of the list of cameras \nthat form this panoramic system.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>camera</strong>:  new camera in panoramic system</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">camera</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.removeCamera", "modulename": "panoramic_system", "qualname": "PanoramicSystem.removeCamera", "kind": "function", "doc": "<p>Remove the camera from the list of cameras \nthat form this panoramic system by its id number.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>camera_id</strong>:  id number of the camera we want to remove</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getSize", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getSize", "kind": "function", "doc": "<p>Get size of the panoramic system body.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>size of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getLength", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getLength", "kind": "function", "doc": "<p>Get length of the panoramic system body.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>length of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getWidth", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getWidth", "kind": "function", "doc": "<p>Get width of the panoramic system body.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>width of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getHeight", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getHeight", "kind": "function", "doc": "<p>Get height of the panoramic system body.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>height of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getAxis", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getAxis", "kind": "function", "doc": "<p>Get angles that specify the orientation of the panoramic system in space.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>angles of the panoramic system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getPitch", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getPitch", "kind": "function", "doc": "<p>Get pitch angle of the panoramic system.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>pitch angle of the panoramic system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getYaw", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getYaw", "kind": "function", "doc": "<p>Get yaw angle of the panoramic system.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>yaw angle of the panoramic system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getRoll", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getRoll", "kind": "function", "doc": "<p>Get roll angle of the panoramic system.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>roll angle of the panoramic system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getCoordinates", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getCoordinates", "kind": "function", "doc": "<p>Get the coordinates of the center of the panoramic system body in space.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinates of the center of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getCoordinatesX", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getCoordinatesX", "kind": "function", "doc": "<p>Get the coordinate x of the center of the panoramic system body in space.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinate x of the center of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getCoordinatesY", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getCoordinatesY", "kind": "function", "doc": "<p>Get the coordinate y of the center of the panoramic system body in space.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinate y of the center of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getCoordinatesZ", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getCoordinatesZ", "kind": "function", "doc": "<p>Get the coordinate z of the center of the panoramic system body in space.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>coordinate z of the center of the panoramic system body</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getListOfCameras", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getListOfCameras", "kind": "function", "doc": "<p>Get list of cameras that form the panoramic system with their parameters.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of cameras</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getListOfCamerasFOV", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getListOfCamerasFOV", "kind": "function", "doc": "<p>Get list of FOV of cameras that form the panoramic system. \nCamera FOV are specified by arrays containing four vectors with point coordinates.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of cameras FOV</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getListOfCamerasFOS", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getListOfCamerasFOS", "kind": "function", "doc": "<p>Get list of FOS of cameras that form the panoramic system. \nCamera FOS are specified by arrays containing some vectors with point coordinates.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of cameras FOS</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.getListOfCamerasAxis", "modulename": "panoramic_system", "qualname": "PanoramicSystem.getListOfCamerasAxis", "kind": "function", "doc": "<p>Get list of main optical axis of cameras that form the panoramic system. \nCamera axis are specified by arrays containing two vectors with point coordinates.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of cameras main optical axis</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.printParameters", "modulename": "panoramic_system", "qualname": "PanoramicSystem.printParameters", "kind": "function", "doc": "<p>Print panoramic system parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.calculatePanoramicSystemFOV", "modulename": "panoramic_system", "qualname": "PanoramicSystem.calculatePanoramicSystemFOV", "kind": "function", "doc": "<p>Calculate FOV for each camera in panoramic system and return list of cameras FOV for panoramic system. </p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of cameras FOV for panoramic system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.calculatePanoramicSystemFOS", "modulename": "panoramic_system", "qualname": "PanoramicSystem.calculatePanoramicSystemFOS", "kind": "function", "doc": "<p>Calculate FOS for each camera in panoramic system and return list of cameras FOV for panoramic system.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of cameras FOS for panoramic system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "panoramic_system.PanoramicSystem.showPanoramicSystem", "modulename": "panoramic_system", "qualname": "PanoramicSystem.showPanoramicSystem", "kind": "function", "doc": "<p>View the body of the panoramic system up close to ensure \nthat the camera lenses don't block the view of other cameras in the panoramic system.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "scheme", "modulename": "scheme", "kind": "module", "doc": "<p>This module contains functions that, \nbased on the parameters of the field of interest to us \nand the list of panoramic systems that review the field of interest to us, \nimplement visualization of fields of view and sharpness.</p>\n"}, {"fullname": "scheme.toMeters", "modulename": "scheme", "qualname": "toMeters", "kind": "function", "doc": "<p>Conversion function from millimeters to meters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>:  some value in millimeters</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>the same value in meters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "scheme.showFOV", "modulename": "scheme", "qualname": "showFOV", "kind": "function", "doc": "<p>A function that builds a 2D-projection of the field of view\nbased on the parameters of the field of interest to us and the list of panoramic systems \nviewing the field of interest to us.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>field</strong>:  parameters of the field we are interested in</li>\n<li><strong>list_of_panoramic_systems</strong>:  list of panoramic systems that survey the field of interest to us</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>field of view graph</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">field</span>, </span><span class=\"param\"><span class=\"n\">list_of_panoramic_systems</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "scheme.showFOS", "modulename": "scheme", "qualname": "showFOS", "kind": "function", "doc": "<p>A function that builds a 2D-projection of the field of scharpness\nbased on the parameters of the field of interest to us and the list of panoramic systems \nviewing the field of interest to us.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>field</strong>:  parameters of the field we are interested in</li>\n<li><strong>list_of_panoramic_systems</strong>:  list of panoramic systems that survey the field of interest to us</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>field of scharpness graph</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">field</span>, </span><span class=\"param\"><span class=\"n\">list_of_panoramic_systems</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "rotation_matrix", "modulename": "rotation_matrix", "kind": "module", "doc": "<p>This module contains functions for calculating rotation matrices around the x, y, z axes \nand a matrix that is a superposition of these rotation matrices around these three axes.</p>\n"}, {"fullname": "rotation_matrix.getYawRotationMatrix", "modulename": "rotation_matrix", "qualname": "getYawRotationMatrix", "kind": "function", "doc": "<p>Calculate and return rotation matrix around the z axis.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>yaw</strong>:  angle of rotation around the z axis</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>rotation matrix around the z axis</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "rotation_matrix.getPitchRotationMatrix", "modulename": "rotation_matrix", "qualname": "getPitchRotationMatrix", "kind": "function", "doc": "<p>Calculate and return rotation matrix around the y axis.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>yaw</strong>:  angle of rotation around the y axis</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>rotation matrix around the y axis</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pitch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "rotation_matrix.getRollRotationMatrix", "modulename": "rotation_matrix", "qualname": "getRollRotationMatrix", "kind": "function", "doc": "<p>Calculate and return rotation matrix around the x axis.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>yaw</strong>:  angle of rotation around the x axis</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>rotation matrix around the x axis</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">roll</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "rotation_matrix.getRotationMatrix", "modulename": "rotation_matrix", "qualname": "getRotationMatrix", "kind": "function", "doc": "<p>Calculate and return superposition of three rotation matrices about the x, y, z axes.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pitch</strong>:  angle of rotation around the y axis</li>\n<li><strong>yaw</strong>:  angle of rotation around the z axis</li>\n<li><strong>roll</strong>:  angle of rotation around the x axis</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>final rotation matrix around the x, y, z axes</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pitch</span>, </span><span class=\"param\"><span class=\"n\">yaw</span>, </span><span class=\"param\"><span class=\"n\">roll</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field", "modulename": "field", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "field.Field", "modulename": "field", "qualname": "Field", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "field.Field.__init__", "modulename": "field", "qualname": "Field.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">length</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">grandstand_width</span></span>)</span>"}, {"fullname": "field.Field.getSize", "modulename": "field", "qualname": "Field.getSize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getLength", "modulename": "field", "qualname": "Field.getLength", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getWidth", "modulename": "field", "qualname": "Field.getWidth", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getCoordinates", "modulename": "field", "qualname": "Field.getCoordinates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getCoordinatesX", "modulename": "field", "qualname": "Field.getCoordinatesX", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getCoordinatesY", "modulename": "field", "qualname": "Field.getCoordinatesY", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getGrandstandWidth", "modulename": "field", "qualname": "Field.getGrandstandWidth", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getABCDCoordinates", "modulename": "field", "qualname": "Field.getABCDCoordinates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getACoordinates", "modulename": "field", "qualname": "Field.getACoordinates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getBCoordinates", "modulename": "field", "qualname": "Field.getBCoordinates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getCCoordinates", "modulename": "field", "qualname": "Field.getCCoordinates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "field.Field.getDCoordinates", "modulename": "field", "qualname": "Field.getDCoordinates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader", "modulename": "json_reader", "kind": "module", "doc": "<p>This module contains functions for interacting with files and data in JSON-format.</p>\n"}, {"fullname": "json_reader.fileReader", "modulename": "json_reader", "qualname": "fileReader", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader.fileLoader", "modulename": "json_reader", "qualname": "fileLoader", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader.saveDump", "modulename": "json_reader", "qualname": "saveDump", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader.loadDump", "modulename": "json_reader", "qualname": "loadDump", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader.loadFromDumpToFile", "modulename": "json_reader", "qualname": "loadFromDumpToFile", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader.fieldReader", "modulename": "json_reader", "qualname": "fieldReader", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_field</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader.listOfPanoramicSystemsReader", "modulename": "json_reader", "qualname": "listOfPanoramicSystemsReader", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">panoramic_systems</span>, </span><span class=\"param\"><span class=\"n\">data_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "json_reader.initModel", "modulename": "json_reader", "qualname": "initModel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">field_file</span>, </span><span class=\"param\"><span class=\"n\">list_of_panoramic_systems_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();